/* Experimental UI Styles */
.experimental-ui .chat-container {
    width: 500px;
    height: 600px;
    background: var(--bg-primary);
    border: 1px solid var(--border-color);
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    box-shadow: var(--shadow-lg);
    display: flex;
    flex-direction: column;
    z-index: 1000;
    user-select: none;
    touch-action: none;
    min-width: 350px;
    min-height: 400px;
    margin: 0;
    will-change: left, top;
}

/* Model selector container - ensure it maintains proportional height */
.experimental-ui .chat-container .model-selector {
    flex: 0 0 auto; /* Don't grow/shrink, keep fixed height */
    min-height: 60px; /* Ensure minimum height for usability */
    padding: 0.75rem 1rem;
    background: var(--bg-secondary);
    border-bottom: 1px solid var(--border-color);
    display: flex;
    align-items: center;
    gap: 1rem;
    flex-wrap: wrap; /* Allow wrapping on very small sizes */
}

.experimental-ui .chat-container .model-selector label {
    font-weight: 500;
    color: var(--text-primary);
    white-space: nowrap; /* Prevent label from breaking */
    flex-shrink: 0; /* Don't shrink the label */
}

.experimental-ui .chat-container .model-selector .model-select {
    flex: 1 1 auto; /* Grow to fill available space */
    min-width: 120px; /* Minimum width for dropdown */
    padding: 0.5rem;
    border: 1px solid var(--border-color);
    border-radius: var(--radius-md);
    background: var(--bg-primary);
    color: var(--text-primary);
    cursor: pointer;
}

.experimental-ui .chat-container .model-selector .new-chat-btn {
    flex: 0 0 auto; /* Don't grow/shrink */
    padding: 0.5rem 0.75rem;
    background: var(--accent-color);
    border: 1px solid var(--accent-color);
    border-radius: var(--radius-md);
    color: var(--text-inverse);
    cursor: pointer;
    font-weight: 500;
    white-space: nowrap; /* Prevent button text from wrapping */
}

/* Resize handle for chat container */
.experimental-ui .chat-container .resize-handle {
    position: absolute;
    bottom: 0;
    right: 0;
    width: 20px;
    height: 20px;
    cursor: se-resize;
    background: linear-gradient(-45deg, transparent 0%, transparent 40%, var(--border-color) 40%, var(--border-color) 45%, transparent 45%, transparent 55%, var(--border-color) 55%, var(--border-color) 60%, transparent 60%);
    opacity: 0.7;
    transition: opacity 0.2s ease;
    z-index: 1001;
    touch-action: none;
}

.experimental-ui .chat-container .resize-handle:hover {
    opacity: 1;
    background: linear-gradient(-45deg, transparent 0%, transparent 40%, var(--text-secondary) 40%, var(--text-secondary) 45%, transparent 45%, transparent 55%, var(--text-secondary) 55%, var(--text-secondary) 60%, transparent 60%);
}

/* Ensure chat container maintains fixed position during resize and drag */
.experimental-ui .chat-container.dragging {
    cursor: grabbing !important;
    transition: none !important;
    box-shadow: 0 8px 25px rgba(0,0,0,0.3) !important;
    will-change: left, top !important;
    transform: none !important;
    position: fixed !important;
    margin: 0 !important;
}

/* Chat container dragging specific styles */
.experimental-ui .chat-container.dragging {
    cursor: grabbing !important;
}

.experimental-ui .chat-title {
    height: 30px;
    background: var(--bg-secondary);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: grab;
    border-bottom: 1px solid var(--border-color);
    user-select: none;
    font-weight: 600;
    color: var(--text-primary);
    font-size: var(--font-size-sm);
    touch-action: none; /* Prevent default touch behaviors */
}

.experimental-ui .chat-title:active {
    cursor: grabbing;
}

.experimental-ui .chat-messages {
    flex: 1; /* Takes up remaining space */
    overflow-y: auto;
    background: repeating-linear-gradient(
        to bottom,
        var(--bg-primary) 0px,
        var(--bg-primary) 19px,
        var(--bg-tertiary) 20px
    );
    padding: 1rem;
    min-height: 0; /* Allow flex shrinking */
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.experimental-ui .chat-input-container {
    flex: 0 0 auto;
    min-height: 100px; /* Increased minimum height */
    background: var(--bg-secondary);
    display: flex;
    align-items: center;
    padding: 0.5rem 1rem;
    border-top: 1px solid var(--border-color);
}

.experimental-ui .chat-input-container .chat-input-wrapper {
    display: flex;
    align-items: flex-end;
    gap: 0.75rem;
    width: 100%;
}

.experimental-ui .chat-input-container .chat-input {
    flex: 1;
    padding: 0.75rem;
    border: 1px solid var(--border-color);
    border-radius: var(--radius-md);
    background: var(--bg-primary);
    color: var(--text-primary);
    resize: none;
    font-family: inherit;
    font-size: var(--font-size-sm);
    min-height: 60px;
    max-height: 160px; /* Allow for more typing space */
}

.experimental-ui .chat-input-container .send-btn {
    flex: 0 0 auto;
    padding: 0.5rem;
    background: var(--primary-color);
    border: none;
    border-radius: var(--radius-md);
    color: var(--text-inverse);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 40px;
    height: 40px;
}

/* Sticky Note Styles */
.experimental-ui .sticky-note {
    width: 150px;
    min-height: 120px;
    background: #ffff00 !important; /* Bright yellow for visibility */
    border: 2px solid #333 !important; /* Dark border for contrast */
    position: fixed !important; /* Changed from absolute to fixed for correct drag math */
    will-change: transform, left, top; /* Optimize for movement and hover */
    transition: transform 0.1s ease, box-shadow 0.2s ease; /* Smoother hover effect */
    box-shadow: 4px 4px 12px rgba(0, 0, 0, 0.4) !important;
    transform-origin: center center; /* Consistent scaling */
    border-radius: 5px;
    padding: 0; /* Remove padding to accommodate drag handle */
    z-index: 1000 !important; /* Higher z-index */
    font-family: Arial, sans-serif;
    user-select: none;
    color: #000 !important; /* Black text for contrast */
    display: flex !important; /* Use flex for layout */
    flex-direction: column;
}

/* Sticky Note Drag Handle (similar to chat title bar) */
.experimental-ui .sticky-note .sticky-drag-handle {
    height: 24px;
    background: #e6e600 !important; /* Slightly darker yellow for the handle */
    border-bottom: 1px solid #333 !important;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: move;
    user-select: none;
    font-weight: 600;
    color: #000 !important;
    font-size: 11px;
    border-radius: 3px 3px 0 0; /* Rounded top corners only */
    padding: 0 0.5rem;
}

/* Sticky Note Content Area */
.experimental-ui .sticky-note .sticky-content {
    flex: 1;
    padding: 0.5rem 0.75rem 0.75rem 0.75rem;
    position: relative;
}

/* Styles for when a sticky note is being dragged */
.experimental-ui .sticky-note {
    cursor: grab !important;
    user-select: none !important;
    -webkit-user-select: none !important;
    transition: transform 0.2s ease, box-shadow 0.2s ease !important;
    will-change: transform, left, top !important; /* Optimize for animations */
}

.experimental-ui .sticky-note.dragging {
    transform: none !important;
    transition: none !important;
    box-shadow: 12px 12px 24px rgba(0, 0, 0, 0.4) !important;
    cursor: grabbing !important;
    z-index: 1010 !important;
}

.experimental-ui .sticky-note:hover:not(.dragging) {
    transform: scale(1.05) !important;
    z-index: 1001 !important; /* Ensure hover is above others, but below dragging */
    box-shadow: 6px 6px 16px rgba(0, 0, 0, 0.5) !important;
}

.experimental-ui .sticky-note .close-button {
    position: absolute;
    top: 2px;
    right: 2px;
    width: 18px;
    height: 18px;
    background: #ff0000 !important;
    color: white !important;
    text-align: center;
    line-height: 16px;
    cursor: pointer;
    border-radius: 50%;
    font-size: 12px;
    font-weight: bold;
    opacity: 0;
    transition: opacity 0.2s ease;
    border: 1px solid #cc0000;
    z-index: 1002 !important;
}

.experimental-ui .sticky-note:hover .close-button {
    opacity: 1;
}

.experimental-ui .sticky-note .close-button:hover {
    background: #cc0000;
    transform: scale(1.1);
}

.experimental-ui .sticky-note .sticky-title {
    font-weight: 600;
    color: #000 !important;
    margin-bottom: 0.5rem;
    font-size: 13px;
    line-height: 1.3;
    word-wrap: break-word;
    max-height: 60px;
    overflow: hidden;
}

.experimental-ui .sticky-note .conversation-time {
    font-size: 10px;
    color: #333 !important;
    position: absolute;
    bottom: 8px;
    right: 8px;
    font-style: italic;
}

.experimental-ui .sticky-note .message-content {
    margin-top: 0.5rem;
    color: #333;
    font-size: 11px;
    line-height: 1.4;
    word-wrap: break-word;
    max-height: 40px;
    overflow: hidden;
}

/* Hide regular conversation history when in experimental mode */
.experimental-ui .conversation-history {
    display: none;
}

/* Adjust main container for experimental UI */
.experimental-ui#chat-page {
    display: block;
    padding: 0;
    height: 100vh;
    overflow: visible !important; /* Allow sticky notes to be visible */
    position: relative;
}

/* Ensure body allows sticky notes to be visible in experimental mode */
body:has(.experimental-ui) {
    overflow: visible !important;
}

/* Ensure the main app container allows overflow for sticky notes */
.experimental-ui .main-app {
    overflow: visible !important;
}

/* Text Editor Styles */
.experimental-ui .text-editor-container {
    background: var(--bg-primary);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-lg);
    display: flex;
    flex-direction: column;
    user-select: none;
    min-width: 300px;
    min-height: 200px;
    max-width: 800px;
    max-height: 600px;
}

.experimental-ui .text-editor-container.dragging {
    box-shadow: var(--shadow-xl);
    transition: none;
}

.experimental-ui .text-editor-container.resizing {
    user-select: none;
}

.experimental-ui .text-editor-title {
    background: var(--bg-secondary);
    color: var(--text-primary);
    padding: 1rem;
    border-bottom: 1px solid var(--border-color);
    border-radius: var(--radius-lg) var(--radius-lg) 0 0;
    font-weight: 600;
    cursor: grab;
    user-select: none;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
}

.experimental-ui .text-editor-title-text {
    flex: 1;
    text-align: center;
}

.experimental-ui .text-editor-save-btn {
    background: #10b981; /* Green background */
    color: white;
    border: none;
    border-radius: var(--radius-md);
    padding: 0.5rem 0.75rem;
    font-size: 12px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    flex-shrink: 0;
}

.experimental-ui .text-editor-save-btn:hover {
    background: #059669; /* Darker green on hover */
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

.experimental-ui .text-editor-save-btn:active {
    transform: translateY(0);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.experimental-ui .text-editor-title:active {
    cursor: grabbing;
}

.experimental-ui .text-editor-textarea {
    flex: 1;
    resize: none;
    border: none;
    outline: none;
    padding: 1rem;
    background: var(--bg-primary);
    color: var(--text-primary);
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
    font-size: 14px;
    line-height: 1.5;
    border-radius: 0 0 var(--radius-lg) var(--radius-lg);
}

.experimental-ui .text-editor-textarea::placeholder {
    color: var(--text-secondary);
}

.experimental-ui .text-editor-textarea:focus {
    outline: none;
}

.experimental-ui .text-editor-resize-handle {
    position: absolute;
    bottom: 0;
    right: 0;
    width: 20px;
    height: 20px;
    background: linear-gradient(135deg, transparent 50%, var(--border-color) 50%);
    cursor: se-resize;
    border-radius: 0 0 var(--radius-lg) 0;
}

.experimental-ui .text-editor-resize-handle:hover {
    background: linear-gradient(135deg, transparent 50%, var(--text-secondary) 50%);
}
